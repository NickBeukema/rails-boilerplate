# IMPORTANT: This file is generated by cucumber-rails - edit at your own peril.
# It is recommended to regenerate this file in the future when you upgrade to a
# newer version of cucumber-rails. Consider adding your own code to a new file
# instead of editing this one. Cucumber will automatically load all features/**/*.rb
# files.

require 'cucumber/rails'
require 'capybara/poltergeist'

require 'autopsy/cucumber'
require 'autopsy/poltergeist'

ember_server = nil
rails_server = nil

Dir.chdir(Rails.root.join('frontend')) do
  ember_server = IO.popen([{"API_HOST" => "http://localhost:3001"}, "ember", "server", "--proxy", "http://0.0.0.0:3001", "--port", "4201", "--live-reload", "false", :err => [:child, :out]])
end

Dir.chdir(Rails.root) do
  rails_server = IO.popen(['rails', 'server', '--port', '3001', '--environment', 'test', '--pid', 'tmp/pids/server2.pid', :err => [:child, :out]])
end

at_exit do
  Process.kill 9, rails_server.pid, ember_server.pid
end

Timeout::timeout(30) do
  # wait for the magic words from ember
  while running = ember_server.gets
    if running =~ /Build successful/i
      break
    end
  end
  # when rails starts logging, it's running
  while running = rails_server.gets
    if running =~ /INFO/i
      break
    end
  end
end

Capybara.configure do |config|
  config.run_server = false
  config.default_driver = :default_poltergeist_driver
  config.javascript_driver = :default_poltergeist_driver
  config.app_host = 'http://localhost:4201'

  config.default_selector = :css
  config.raise_server_errors = false
end

AutopsyPoltergeist.init(:default_poltergeist_driver, {
  js_errors: false,
  timeout: 380,
  phantomjs_logger: StringIO.new,
  logger: nil,
  phantomjs_options: ['--load-images=yes', '--ignore-ssl-errors=yes'],
  phantomjs:  Phantomjs.path,
  window_size: [1200, 1200]
})

ActionController::Base.allow_rescue = false

# Remove/comment out the lines below if your app doesn't have a database.
# For some databases (like MongoDB and CouchDB) you may need to use :truncation instead.
begin
  DatabaseCleaner.strategy = :truncation
rescue NameError
  raise "You need to add database_cleaner to your Gemfile (in the :test group) if you wish to use it."
end

Before do
  visit '/'
  page.execute_script('if (localStorage && localStorage.clear) localStorage.clear()')
end

# Possible values are :truncation and :transaction
# The :transaction strategy is faster, but might give you threading problems.
# See https://github.com/cucumber/cucumber-rails/blob/master/features/choose_javascript_database_strategy.feature
Cucumber::Rails::Database.javascript_strategy = :truncation

module EmberHelpers
  def expect_dependencies
    throw 'No jQuery' if page.browser.execute_script "return !$"
    throw 'No Ember' if page.browser.execute_script "return !Ember"
  end
  def detect_ember_app
    return page.execute_script "return $('body').hasClass('ember-application')"
  end
  def wait_for_ember_run_loop_to_complete
    return unless detect_ember_app
    FirePoll.patiently do
      expect_dependencies
      throw 'AJAX pending' if page.execute_script "return $('body').hasClass('ajax-pending')"
      throw 'No pause in Ember run loop' unless page.execute_script "return !Ember.run.currentRunLoop"
    end
  end
  def wait_for_ajax_completion
    FirePoll.patiently do
      expect(page.evaluate_script('$.active').to_i).to be_zero
    end
  end
end
World EmberHelpers
